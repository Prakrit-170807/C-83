{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nvar customFonts = {\n  \"chalkboard\": require(\"../assets/fonts/Chalkboard.ttf\"),\n  \"MoonDance\": require(\"../assets/fonts/MoonDance-Regular.ttf\")\n};\n\nvar CreateStory = function (_React$Component) {\n  _inherits(CreateStory, _React$Component);\n\n  var _super = _createSuper(CreateStory);\n\n  function CreateStory(props) {\n    var _this;\n\n    _classCallCheck(this, CreateStory);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false,\n      stateholder: \"Image1\"\n    };\n    return _this;\n  }\n\n  _createClass(CreateStory, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, null);\n      } else {\n        var imageslst = {\n          \"Image1 \": require(\"../assets/story_image_1.png\"),\n          \"Image2 \": require(\"../assets/story_image_2.png\"),\n          \"Image3 \": require(\"../assets/story_image_3.png\"),\n          \"Image4 \": require(\"../assets/story_image_4.png\"),\n          \"Image5 \": require(\"../assets/story_image_5.png\")\n        };\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          }\n        }, React.createElement(View, {\n          style: styles.appTitle\n        }, React.createElement(View, {\n          style: styles.appIcon\n        }, React.createElement(Image, {\n          source: require(\"../assets/maillogo.png\"),\n          style: styles.iconImage\n        })), React.createElement(View, {\n          style: styles.appTitleTextContainer\n        }, React.createElement(Text, {\n          style: styles.appTitleText\n        }, \"Creat A new Story\")), React.createElement(ScrollView, null, React.createElement(Image, {\n          source: imageslst[this.state.stateholder],\n          style: styles.previewImage\n        }), React.createElement(View, null, React.createElement(DropDownPicker, {\n          items: [{\n            label: 'Image1',\n            value: 'Image1'\n          }, {\n            label: 'Image2',\n            value: 'Image2'\n          }, {\n            label: 'Image3',\n            value: 'Image3'\n          }, {\n            label: 'Image4',\n            value: 'Image4'\n          }, {\n            label: 'Image5',\n            value: 'Image5'\n          }]\n        })))));\n      }\n    }\n  }]);\n\n  return CreateStory;\n}(React.Component);\n\nexport { CreateStory as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"chalkboard\"\n  },\n  cardContainer: {\n    flex: 0.93\n  },\n  storyAuthorText: {\n    fontSize: RFValue(18),\n    fontFamily: 'MoonDance',\n    color: 'white'\n  },\n  descriptionText: {\n    fontFamily: 'MoonDance',\n    fontSize: 13,\n    color: 'white',\n    paddingTop: RFValue(10)\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(1),\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-83/screens/CreateStory.js"],"names":["React","Component","AppLoading","Font","RFValue","DropDownPicker","customFonts","require","CreateStory","props","state","fontsLoaded","stateholder","loadAsync","setState","_loadFontsAsync","imageslst","flex","styles","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleText","previewImage","label","value","StyleSheet","create","container","backgroundColor","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","fontFamily","cardContainer","storyAuthorText","descriptionText","paddingTop","alignSelf","borderRadius","marginVertical"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  Dimensions,\r\n  ScrollView\r\n} from \"react-native\";\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\n\r\nlet customFonts = {\r\n  \"chalkboard\": require(\"../assets/fonts/Chalkboard.ttf\"),\r\n  \"MoonDance\": require(\"../assets/fonts/MoonDance-Regular.ttf\")\r\n};\r\nexport default class CreateStory extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false,\r\n      stateholder: \"Image1\"\r\n    };\r\n  }\r\n\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    }\r\n    else {\r\n      let imageslst = {\r\n        \"Image1 \": require(\"../assets/story_image_1.png\"),\r\n        \"Image2 \": require(\"../assets/story_image_2.png\"),\r\n        \"Image3 \": require(\"../assets/story_image_3.png\"),\r\n        \"Image4 \": require(\"../assets/story_image_4.png\"),\r\n        \"Image5 \": require(\"../assets/story_image_5.png\")\r\n      }\r\n      return (\r\n        <View style={{ flex: 1 }}>\r\n          <View style={styles.appTitle}>\r\n            <View style={styles.appIcon}>\r\n              <Image\r\n                source={require(\"../assets/maillogo.png\")}\r\n                style={styles.iconImage}\r\n              ></Image>\r\n            </View>\r\n            <View style={styles.appTitleTextContainer}>\r\n              <Text style={styles.appTitleText}>Creat A new Story</Text>\r\n            </View>\r\n            <ScrollView>\r\n              <Image source={imageslst[this.state.stateholder]} style={styles.previewImage} />\r\n              <View >\r\n                <DropDownPicker items={[\r\n                  {label: 'Image1', value: 'Image1'},\r\n                  {label: 'Image2', value: 'Image2'},\r\n                  {label: 'Image3', value: 'Image3'}, \r\n                  {label: 'Image4', value: 'Image4'},\r\n                  {label: 'Image5', value: 'Image5'}\r\n                ]} />\r\n              </View>\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#15193c\"\r\n  },\r\n  appTitle: {\r\n    flex: 0.07,\r\n    flexDirection: \"row\"\r\n  },\r\n  appIcon: {\r\n    flex: 0.3,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  iconImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\"\r\n  },\r\n  appTitleTextContainer: {\r\n    flex: 0.7,\r\n    justifyContent: \"center\"\r\n  },\r\n  appTitleText: {\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"chalkboard\"\r\n  },\r\n  cardContainer: {\r\n    flex: 0.93\r\n  },\r\n  storyAuthorText:\r\n  {\r\n    fontSize: RFValue(18),\r\n    fontFamily: 'MoonDance',\r\n    color: 'white',\r\n  },\r\n  descriptionText:\r\n  {\r\n    fontFamily: 'MoonDance',\r\n    fontSize: 13,\r\n    color: 'white',\r\n    paddingTop: RFValue(10),\r\n  },\r\n  previewImage: {\r\n    width: \"93%\",\r\n    height: RFValue(250),\r\n    alignSelf: \"center\",\r\n    borderRadius: RFValue(10),\r\n    marginVertical: RFValue(1),\r\n    resizeMode: \"contain\"\r\n  }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}